[{"/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/index.js":"1","/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/reportWebVitals.js":"2","/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/App.js":"3","/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/components/Landing.jsx":"4","/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/components/Rules.jsx":"5","/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/components/GameResult.jsx":"6","/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/components/Play.jsx":"7","/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/components/OptionsDisabled.jsx":"8","/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/components/OptionsPlayer.jsx":"9","/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/components/OnePlayer.jsx":"10","/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/components/TwoPlayers.jsx":"11"},{"size":500,"mtime":1606597883959,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1606597883961,"results":"14","hashOfConfig":"13"},{"size":739,"mtime":1607462740096,"results":"15","hashOfConfig":"13"},{"size":1199,"mtime":1607478625670,"results":"16","hashOfConfig":"13"},{"size":748,"mtime":1607473728570,"results":"17","hashOfConfig":"13"},{"size":2829,"mtime":1607480006260,"results":"18","hashOfConfig":"13"},{"size":4575,"mtime":1607478109737,"results":"19","hashOfConfig":"13"},{"size":1194,"mtime":1607473652130,"results":"20","hashOfConfig":"13"},{"size":1723,"mtime":1607473672037,"results":"21","hashOfConfig":"13"},{"size":3290,"mtime":1607480263173,"results":"22","hashOfConfig":"13"},{"size":3957,"mtime":1607479918346,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1p4p8ku",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/index.js",[],["48","49"],"/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/reportWebVitals.js",[],"/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/App.js",[],"/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/components/Landing.jsx",[],"/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/components/Rules.jsx",[],"/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/components/GameResult.jsx",[],"/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/components/Play.jsx",["50"],"const rock = (option) => option ==='rock';\nconst paper = (option) => option ==='paper';\nconst scissors = (option) => option ==='scissors';\nconst lizard = (option) => option ==='lizard';\nconst spock = (option) => option ==='spock';\n\nconst startGame = (playerOneChoice, playerTwoChoice) =>{\n\n    const result = {finish: 'warning', message: ''};\n    const playerOne = 'Player 1'\n    const playerTwo = 'Player 2'\n\n    switch (playerOneChoice){\n\n        case('rock') :\n            if(rock(playerTwoChoice)) result.message =`It's a tie!`;\n            \n            if(scissors(playerTwoChoice)) {\n                result.message=`Rock crushes Scissors, ${playerOne} wins!`;\n                result.finish='won'\n            };\n\n            if(paper(playerTwoChoice)) {\n                result.message=`Paper covers Rock, ${playerTwo} wins!`;\n                result.finish='lost';\n            };\n\n            if(lizard(playerTwoChoice)) {\n                result.message=`Rock crushes Lizard, ${playerOne} wins!`;\n                result.finish='won';\n            };\n\n            if(spock(playerTwoChoice)) {\n                result.message=`Spock vaporizes Rock, ${playerTwo} wins!`;\n                result.finish='lost';\n            };\n        break;\n        \n        case('scissors') :\n            if(rock(playerTwoChoice)){\n                result.message =`Rock crushes Scissors, ${playerTwo} wins!`;\n                result.finish='lost'\n            };\n                \n            if(scissors(playerTwoChoice)) result.message=`It's a tie!`;;\n\n            if(paper(playerTwoChoice)) {\n                result.message=`Scissors cuts Paper, ${playerOne} wins!`;\n                result.finish='won';\n            };\n\n            if(lizard(playerTwoChoice)) {\n                result.message=`Scissors decapitates Lizard, ${playerOne} wins!`;\n                result.finish='won';\n            };\n\n            if(spock(playerTwoChoice)) {\n                result.message=`Spock smashes Scissors, ${playerTwo} wins!`;\n                result.finish='lost';\n            };\n        break;\n\n        case('paper') :\n            if(rock(playerTwoChoice)){ \n                result.message =`Paper covers Rock, ${playerOne} wins!`;\n                result.finish = 'won';\n            };\n            \n            if(scissors(playerTwoChoice)) {\n                result.message=`Scissors cuts Paper, ${playerTwo} wins!`;\n                result.finish='lost'\n            };\n\n            if(paper(playerTwoChoice)) result.message=`It's a tie!`;\n\n            if(lizard(playerTwoChoice)) {\n                result.message=`Lizard eats Paper, ${playerTwo} wins!`;\n                result.finish='lost';\n            };\n\n            if(spock(playerTwoChoice)) {\n                result.message=`Paper disproves Spock, ${playerOne} wins!`;\n                result.finish='won';\n            };\n        break;\n        \n        case('lizard') :\n            if(rock(playerTwoChoice)) {\n                result.message =`Rock crushes Lizard, ${playerTwo} wins!`;\n                result.finish='lost';\n            }\n            \n            if(scissors(playerTwoChoice)) {\n                result.message=`Scissors decapitates Lizard, ${playerTwo} wins!`;\n                result.finish='lost'\n            };\n\n            if(paper(playerTwoChoice)) {\n                result.message=`Lizard eats Paper, ${playerOne} wins!`;\n                result.finish='won';\n            };\n\n            if(lizard(playerTwoChoice)) result.message=`It's a tie!`;\n\n            if(spock(playerTwoChoice)) {\n                result.message=`Lizard poisons Spock, ${playerOne} wins!`;\n                result.finish='won';\n            };\n        break;\n        \n        case('spock') :\n            if(rock(playerTwoChoice)){\n                result.message =`Spock vaporizes rock, ${playerOne} wins!`;\n                result.finish = 'won';\n            };\n            \n            if(scissors(playerTwoChoice)) {\n                result.message=`Spock smashes scissors, ${playerOne} wins!`;\n                result.finish='won'\n            };\n\n            if(paper(playerTwoChoice)) {\n                result.message=`Paper disproves Spock, ${playerTwo} wins!`;\n                result.finish='lost';\n            };\n\n            if(lizard(playerTwoChoice)) {\n                result.message=`Lizard poisons Spock, ${playerTwo} wins!`;\n                result.finish='lost';\n            };\n\n            if(spock(playerTwoChoice)) result.message=`It's a tie!`;\n        break;\n        \n        default:;    \n    }\n    return result;\n}\n\nexport default {startGame};","/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/components/OptionsDisabled.jsx",[],"/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/components/OptionsPlayer.jsx",[],"/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/components/OnePlayer.jsx",[],"/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/components/TwoPlayers.jsx",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":140,"column":1,"nodeType":"57","endLine":140,"endColumn":28},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]