[{"/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/index.js":"1","/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/reportWebVitals.js":"2","/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/App.js":"3","/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/components/Landing.jsx":"4","/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/components/Rules.jsx":"5","/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/components/GameResult.jsx":"6","/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/components/Play.jsx":"7","/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/components/OptionsDisabled.jsx":"8","/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/components/OptionsPlayer.jsx":"9","/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/components/OnePlayer.jsx":"10","/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/components/TwoPlayers.jsx":"11"},{"size":500,"mtime":1606597883959,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1606597883961,"results":"14","hashOfConfig":"13"},{"size":739,"mtime":1607462740096,"results":"15","hashOfConfig":"13"},{"size":1179,"mtime":1607462710970,"results":"16","hashOfConfig":"13"},{"size":1390,"mtime":1607270244383,"results":"17","hashOfConfig":"13"},{"size":1963,"mtime":1607465527476,"results":"18","hashOfConfig":"13"},{"size":4602,"mtime":1607038650169,"results":"19","hashOfConfig":"13"},{"size":1181,"mtime":1607465692939,"results":"20","hashOfConfig":"13"},{"size":1724,"mtime":1607465117960,"results":"21","hashOfConfig":"13"},{"size":3236,"mtime":1607465630986,"results":"22","hashOfConfig":"13"},{"size":3841,"mtime":1607465561995,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1p4p8ku",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/index.js",[],["48","49"],"/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/reportWebVitals.js",[],"/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/App.js",[],"/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/components/Landing.jsx",[],"/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/components/Rules.jsx",[],"/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/components/GameResult.jsx",[],"/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/components/Play.jsx",["50"],"const isRock     = (item) => item==='rock';\nconst isScissors = (item) => item==='scissors';\nconst isPaper    = (item) => item==='paper';\nconst isLizard   = (item) => item==='lizard';\nconst isSpock    = (item) => item==='spock';\n\nconst startGame = (playerItem, anotherItem) =>{\n    const result = {finish: 'warning', message: ''};\n    const fstPlayer = 'Player 1'\n    const sndPlayer = 'Player 2'\n    switch (playerItem){\n        case('rock') :\n            if(isRock(anotherItem)) result.message =`The rocks crashes, It's a tie...`;\n            \n            if(isScissors(anotherItem)) {\n                result.message=`Rock destroys Scissors, ${fstPlayer} won!`;\n                result.finish='won'\n            };\n\n            if(isPaper(anotherItem)) {\n                result.message=`Paper wrap the Rock, ${sndPlayer} won!`;\n                result.finish='lost';\n            };\n\n            if(isLizard(anotherItem)) {\n                result.message=`Rock destroys the Lizard, ${fstPlayer} won!`;\n                result.finish='won';\n            };\n\n            if(isSpock(anotherItem)) {\n                result.message=`Spock vaporized the Rock, ${sndPlayer} won!`;\n                result.finish='lost';\n            };\n        break;\n        \n        case('scissors') :\n            if(isRock(anotherItem)){\n                result.message =`Rock destroys Scissors, ${sndPlayer} won!`;\n                result.finish='lost'\n            };\n                \n            if(isScissors(anotherItem)) result.message=`The Scissors crashes, It's a tie...`;;\n\n            if(isPaper(anotherItem)) {\n                result.message=`Scissors cuts Paper, ${fstPlayer} won!`;\n                result.finish='won';\n            };\n\n            if(isLizard(anotherItem)) {\n                result.message=`Scissors beheads Lizard, ${fstPlayer} won!`;\n                result.finish='won';\n            };\n\n            if(isSpock(anotherItem)) {\n                result.message=`Spock breaks Scissors, ${sndPlayer} won!`;\n                result.finish='lost';\n            };\n        break;\n\n        case('paper') :\n            if(isRock(anotherItem)){ \n                result.message =`Paper cover the Rock, ${fstPlayer} won!`;\n                result.finish = 'won';\n            };\n            \n            if(isScissors(anotherItem)) {\n                result.message=`Scissors cut to Paper, ${sndPlayer} won!`;\n                result.finish='lost'\n            };\n\n            if(isPaper(anotherItem)) result.message=`The Papers crashes, It's a tie...`;\n\n            if(isLizard(anotherItem)) {\n                result.message=`Lizard eats Paper, ${sndPlayer} won!`;\n                result.finish='lost';\n            };\n\n            if(isSpock(anotherItem)) {\n                result.message=`Paper disavows Spock, ${fstPlayer} won!`;\n                result.finish='won';\n            };\n        break;\n        \n        case('lizard') :\n            if(isRock(anotherItem)) {\n                result.message =`Stone destroys Lizard, ${sndPlayer} won!`;\n                result.finish='lost';\n            }\n            \n            if(isScissors(anotherItem)) {\n                result.message=`Scissors beheads Lizard, ${sndPlayer} won!`;\n                result.finish='lost'\n            };\n\n            if(isPaper(anotherItem)) {\n                result.message=`Lizard eats Paper, ${fstPlayer} won!`;\n                result.finish='won';\n            };\n\n            if(isLizard(anotherItem)) result.message=`The Lizards crashes, It's a tie...`;\n\n            if(isSpock(anotherItem)) {\n                result.message=`Lizard Poisons Spock, ${fstPlayer} won!`;\n                result.finish='won';\n            };\n        break;\n        \n        case('spock') :\n            if(isRock(anotherItem)){\n                result.message =`Spock vaporized the rock, ${fstPlayer} won!`;\n                result.finish = 'won';\n            };\n            \n            if(isScissors(anotherItem)) {\n                result.message=`Spock breaks scissors, ${fstPlayer} won!`;\n                result.finish='won'\n            };\n\n            if(isPaper(anotherItem)) {\n                result.message=`Paper disavows Spock, ${sndPlayer} won!`;\n                result.finish='lost';\n            };\n\n            if(isLizard(anotherItem)) {\n                result.message=`Lizard Poisons Spock, ${sndPlayer} won!`;\n                result.finish='lost';\n            };\n\n            if(isSpock(anotherItem)) result.message=`Spocks crashes, It's a tie...`;\n        break;\n        default:;    \n    }\n    return result;\n}\n\nexport default {\n    startGame\n};","/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/components/OptionsDisabled.jsx",[],"/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/components/OptionsPlayer.jsx",[],"/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/components/OnePlayer.jsx",[],"/Users/ailinsp/Desktop/UNQ/UIs/unq-ui-ailin-patino-trabajo-final/src/components/TwoPlayers.jsx",["51"],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":136,"column":1,"nodeType":"58","endLine":138,"endColumn":3},{"ruleId":"59","severity":1,"message":"60","line":5,"column":8,"nodeType":"61","messageId":"62","endLine":5,"endColumn":23},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'OptionsDisabled' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]